Goal: Prepare the sources to better respect FHS
      New configurable paths are introduced in fhs-newpaths.patch
      This patch associates files with the new paths
      This part is debated with upstream but contains the move to
      "cache" path which seems to be the most difficult chunk for
      upstream to adopt

Fixes: #49011

Status wrt upstream: Fowarded and dscussed

Note: Use dedicated directories for:
      - discardable cache data (/var/cache/samba): 
          browse.dat, printers.tbd, <printer>.tdb

      This patch needs work to be cleaner wrt people who want to run
      multiple instances of samba

      The patch *must* be reviewed after every new upstream release.
      FAILURE TO DO SO MAY RESULT IN DATA LOSS FOR OUR USERS!
      
      See comment in fhs-filespaths.patch


Index: samba-3.2.0pre2/source/libsmb/samlogon_cache.c
===================================================================
--- samba-3.2.0pre2.orig/source/libsmb/samlogon_cache.c
+++ samba-3.2.0pre2/source/libsmb/samlogon_cache.c
@@ -34,7 +34,7 @@
 bool netsamlogon_cache_init(void)
 {
 	if (!netsamlogon_tdb) {
-		netsamlogon_tdb = tdb_open_log(lock_path(NETSAMLOGON_TDB), 0,
+		netsamlogon_tdb = tdb_open_log(cache_path(NETSAMLOGON_TDB), 0,
 					       TDB_DEFAULT, O_RDWR | O_CREAT, 0600);
 	}
 
@@ -69,7 +69,7 @@
 	   winbindd_cache.tdb open.  Open the tdb if a NULL is passed. */
 
 	if (!tdb) {
-		tdb = tdb_open_log(lock_path("winbindd_cache.tdb"),
+		tdb = tdb_open_log(cache_path("winbindd_cache.tdb"),
 				   WINBINDD_CACHE_TDB_DEFAULT_HASH_SIZE,
 				   TDB_DEFAULT, O_RDWR, 0600);
 		if (!tdb) {
Index: samba-3.2.0pre2/source/printing/printing.c
===================================================================
--- samba-3.2.0pre2.orig/source/printing/printing.c
+++ samba-3.2.0pre2/source/printing/printing.c
@@ -183,8 +183,8 @@
 	int services = lp_numservices();
 	int snum;
 
-	unlink(lock_path("printing.tdb"));
-	mkdir(lock_path("printing"),0755);
+	unlink(cache_path("printing.tdb"));
+	mkdir(cache_path("printing"),0755);
 
 	/* handle a Samba upgrade */
 
Index: samba-3.2.0pre2/source/printing/nt_printing.c
===================================================================
--- samba-3.2.0pre2.orig/source/printing/nt_printing.c
+++ samba-3.2.0pre2/source/printing/nt_printing.c
@@ -2541,7 +2541,7 @@
 
 	if (geteuid() == 0) {
 		if (asprintf(&printdb_path, "%s%s.tdb",
-				lock_path("printing/"),
+				cache_path("printing/"),
 				sharename) < 0) {
 			return (uint32)-1;
 		}
Index: samba-3.2.0pre2/source/printing/printing_db.c
===================================================================
--- samba-3.2.0pre2.orig/source/printing/printing_db.c
+++ samba-3.2.0pre2/source/printing/printing_db.c
@@ -91,7 +91,7 @@
 	}
 
 	if (asprintf(&printdb_path, "%s%s.tdb",
-				lock_path("printing/"),
+				cache_path("printing/"),
 				printername) < 0) {
 		DLIST_REMOVE(print_db_head, p);
 		SAFE_FREE(p);
Index: samba-3.2.0pre2/source/smbd/lanman.c
===================================================================
--- samba-3.2.0pre2.orig/source/smbd/lanman.c
+++ samba-3.2.0pre2/source/smbd/lanman.c
@@ -1157,9 +1157,9 @@
 	bool local_list_only;
 	int i;
 
-	lines = file_lines_load(lock_path(SERVER_LIST), NULL, 0);
+	lines = file_lines_load(cache_path(SERVER_LIST), NULL, 0);
 	if (!lines) {
-		DEBUG(4,("Can't open %s - %s\n",lock_path(SERVER_LIST),strerror(errno)));
+		DEBUG(4,("Can't open %s - %s\n",cache_path(SERVER_LIST),strerror(errno)));
 		return 0;
 	}
 
Index: samba-3.2.0pre2/source/utils/smbcontrol.c
===================================================================
--- samba-3.2.0pre2.orig/source/utils/smbcontrol.c
+++ samba-3.2.0pre2/source/utils/smbcontrol.c
@@ -875,10 +875,10 @@
 	/* Remove the entry in the winbindd_cache tdb to tell a later
 	   starting winbindd that we're online. */
 
-	tdb = tdb_open_log(lock_path("winbindd_cache.tdb"), 0, TDB_DEFAULT, O_RDWR, 0600);
+	tdb = tdb_open_log(cache_path("winbindd_cache.tdb"), 0, TDB_DEFAULT, O_RDWR, 0600);
 	if (!tdb) {
 		fprintf(stderr, "Cannot open the tdb %s for writing.\n",
-			lock_path("winbindd_cache.tdb"));
+			cache_path("winbindd_cache.tdb"));
 		return False;
 	}
 
@@ -912,13 +912,13 @@
 	   starting winbindd that we're offline. We may actually create
 	   it here... */
 
-	tdb = tdb_open_log(lock_path("winbindd_cache.tdb"),
+	tdb = tdb_open_log(cache_path("winbindd_cache.tdb"),
 				WINBINDD_CACHE_TDB_DEFAULT_HASH_SIZE,
 				TDB_DEFAULT /* TDB_CLEAR_IF_FIRST */, O_RDWR|O_CREAT, 0600);
 
 	if (!tdb) {
 		fprintf(stderr, "Cannot open the tdb %s for writing.\n",
-			lock_path("winbindd_cache.tdb"));
+			cache_path("winbindd_cache.tdb"));
 		return False;
 	}
 
Index: samba-3.2.0pre2/source/libgpo/gpo_fetch.c
===================================================================
--- samba-3.2.0pre2.orig/source/libgpo/gpo_fetch.c
+++ samba-3.2.0pre2/source/libgpo/gpo_fetch.c
@@ -56,7 +56,7 @@
 
 	if ((path = talloc_asprintf(mem_ctx,
 					"%s/%s",
-					lock_path(GPO_CACHE_DIR),
+					cache_path(GPO_CACHE_DIR),
 					file_sys_path)) == NULL) {
 		return NT_STATUS_NO_MEMORY;
 	}
@@ -80,7 +80,7 @@
 static NTSTATUS gpo_prepare_local_store(TALLOC_CTX *mem_ctx,
 					const char *unix_path)
 {
-	const char *top_dir = lock_path(GPO_CACHE_DIR);
+	const char *top_dir = cache_path(GPO_CACHE_DIR);
 	char *current_dir;
 	char *tok;
 
Index: samba-3.2.0pre2/source/winbindd/idmap_cache.c
===================================================================
--- samba-3.2.0pre2.orig/source/winbindd/idmap_cache.c
+++ samba-3.2.0pre2/source/winbindd/idmap_cache.c
@@ -54,7 +54,7 @@
 		return NULL;
 	}
 
-	cache_fname = lock_path("idmap_cache.tdb");
+	cache_fname = cache_path("idmap_cache.tdb");
 
 	DEBUG(10, ("Opening cache file at %s\n", cache_fname));
 
